CREATE QUERY mostReportedDrugsForCompany_v2(STRING companyName, INT k, STRING role) FOR GRAPH faers { 
  #companyName=PFIZER, K=5,role=PS
	# Keep count of how many times each drug is mentioned.
	SumAccum<INT> @numCases;

   # 1. Find all the cases where the given pharma company is the 'mfr_sndr'
  Company ={PharmaCompany.*};
  Cases = SELECT c
  	FROM Company:s -(relatedTo:e)-> ReportedCase:c
	  WHERE s.mfr_sndr == companyName
	;
	
	#. 2. Find all the drug sequences for the selected cases.
	DrugSeqs = SELECT ds
	  FROM Cases:c -(hasSequences:e)-> DrugSequence:ds
    WHERE (role == "" OR ds.role_cod == role)
  ;
	
	# 3. Count the occurences of each drug mentioned in each drug sequence.
	TopDrugs = SELECT d
	  FROM DrugSeqs:ds -(hasDrugs:e)-> Drug:d
	  ACCUM d.@numCases += 1
	  ORDER BY d.@numCases DESC
	  LIMIT k
	;
	
	PRINT TopDrugs;  	
}
CREATE query topSideEffectsForTopDrugs(STRING companyName, INT k, STRING role)
   FOR GRAPH faers {
	  #companyName=PFIZER, K=5,role=PS

   # Define a heap structure which sorts the reaction map (below) by count
	TYPEDEF TUPLE<STRING name, INT cnt> tally;
	HeapAccum<tally>(k, cnt DESC) @topReactions;
		 
	# Keep count of how many times each reaction or drug is mentioned.
	ListAccum<STRING> @reactionList;
	SumAccum<INT> @numCases;
	MapAccum<STRING, INT> @reactionTally;

   # 1. Find all the cases where the given pharma company is the 'mfr_sndr'
  Company ={PharmaCompany.*};
  Cases = SELECT c
  	FROM Company:s -(relatedTo:e)-> ReportedCase:c
	  WHERE s.mfr_sndr == companyName
	;

	# 2. For each case, attach a list of its reactions
	Tally = SELECT r
	  FROM Cases:c -(hasReactions:e)-> Reaction:r
	  ACCUM c.@reactionList += r.pt;
		 
	# 3. Find all the drug sequences for the selected cases, and transfer
	#    the reaction list to the drug sequence.
	DrugSeqs = SELECT ds
	  FROM Cases:c -(hasSequences:e)-> DrugSequence:ds
    WHERE (role == "" OR ds.role_cod == role)
		ACCUM ds.@reactionList = c.@reactionList
  ;
	
	# 4. Count the occurences of each drug mentioned in each drug sequence.
	#    Also count the occurences of each reaction.
	TopDrugs = SELECT d
	  FROM DrugSeqs:ds -(hasDrugs:e)-> Drug:d
	  ACCUM d.@numCases += 1,
      FOREACH reaction in ds.@reactionList DO
		    d.@reactionTally += (reaction -> 1)
		  END
	  ORDER BY d.@numCases DESC
	  LIMIT k
	;
		 
	# 5. Find only the Top K side effects for each selected Drug
	TopDrugs = SELECT d
		 FROM TopDrugs:d 
		 ACCUM
		   FOREACH (reaction, cnt) IN d.@reactionTally DO
		     d.@topReactions += tally(reaction,cnt)
		   END
		 ORDER BY d.@numCases DESC
		;
	
	PRINT TopDrugs[TopDrugs.prod_ai, TopDrugs.@numCases, TopDrugs.@topReactions];
}
